generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./database.db"
}

model Race {
    id              Int               @id @default(autoincrement())
    name            String
    date            DateTime
    classifications Classification[]
    timeKeeper      TimingPoint[]
    player          Player[]
    splitTime       SplitTime[]
    manualSplitTime ManualSplitTime[]
    stopwatch       Stopwatch?
}

model Stopwatch {
    race   Race   @relation(fields: [raceId], references: [id])
    raceId Int
    state  String

    @@id([raceId])
}

model Classification {
    id      Int      @id @default(autoincrement())
    name    String
    race    Race     @relation(fields: [raceId], references: [id])
    raceId  Int
    players Player[]

    @@unique([raceId, name])
}

model Category {
    id        Int     @id @default(autoincrement())
    name      String
    minAge    Int?
    maxAge    Int?
    gender    String?
    isSpecial Boolean
}

model Player {
    id                 Int               @id @default(autoincrement())
    name               String
    lastName           String
    birthDate          DateTime
    gender             String
    bibNumber          Int?
    startTime          Int?
    team               String?
    city               String?
    country            String?
    email              String?
    phoneNumber        String?
    icePhoneNumber     String?
    race               Race              @relation(fields: [raceId], references: [id])
    raceId             Int
    classification     Classification    @relation(fields: [classificationId], references: [id])
    classificationId   Int
    registeredBy       User              @relation(fields: [registeredByUserId], references: [id])
    registeredByUserId Int
    splitTime          SplitTime[]
    manualSplitTime    ManualSplitTime[]

    @@unique([raceId, bibNumber])
    @@unique([classificationId, startTime])
}

model User {
    id                Int      @id @default(autoincrement())
    login             String
    password          String
    registeredPlayers Player[]
}

model TimingPoint {
    id              Int               @id @default(autoincrement())
    name            String
    order           Int
    race            Race              @relation(fields: [raceId], references: [id])
    raceId          Int
    splitTime       SplitTime[]
    manualSplitTime ManualSplitTime[]

    @@unique([raceId, name])
    @@unique([raceId, order])
}

model SplitTime {
    id            Int         @id @default(autoincrement())
    bibNumber     Int
    time          BigInt?
    race          Race        @relation(fields: [raceId], references: [id])
    raceId        Int
    timingPoint   TimingPoint @relation(fields: [timingPointId], references: [id])
    timingPointId Int
    player        Player      @relation(fields: [raceId, bibNumber], references: [raceId, bibNumber])

    @@unique([timingPointId, bibNumber])
}

model ManualSplitTime {
    id            Int         @id @default(autoincrement())
    bibNumber     Int
    time          BigInt?
    race          Race        @relation(fields: [raceId], references: [id])
    raceId        Int
    timingPoint   TimingPoint @relation(fields: [timingPointId], references: [id])
    timingPointId Int
    player        Player      @relation(fields: [raceId, bibNumber], references: [raceId, bibNumber])

    @@unique([timingPointId, bibNumber])
}
