name: Prod.Build_Lint

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    # Artifact build
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v1
            - uses: actions/cache@v3
              with:
                  path: |
                      ~./npm
                      **/.next/cache
                      **/node_modules
                  key: ${{ runner.os }}-app-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-app-${{ hashFiles('**/bun.lockb') }}-

            - name: Install dependencies
              run: bun install

            - name: Build library - utils
              run: |
                  cd ./utils
                  bun run build

            - name: Build library - timer
              run: |
                  cd ./timer
                  bun run build

            - name: Generate prisma
              run: |
                  cd ./panel
                  bun run generate-prisma

            - name: Build Application
              env:
                  NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}
                  NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
                  NEXT_PUBLIC_APP_PORT: ${{ secrets.NEXT_PUBLIC_APP_PORT }}
                  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
                  NEXT_PUBLIC_API_PORT: ${{ secrets.NEXT_PUBLIC_API_PORT }}
              run: |
                  cd ./panel
                  bun next telemetry disable
                  bun run build

            - name: Bundle Application Package
              uses: montudor/action-zip@v1
              with:
                  args: zip -qq --symlinks -r set-package.zip package.json bun.lockb panel utils timer -x "**/.next/cache/**"

            - uses: actions/upload-artifact@v3
              name: Store Application Package
              with:
                  name: application-artifact
                  path: set-package.zip

    # Code linting
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v1
            - uses: actions/cache@v3
              with:
                  path: |
                      ~./npm
                      **/node_modules
                  key: ${{ runner.os }}-lint-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-lint-${{ hashFiles('**/bun.lockb') }}-

            - name: Install dependencies
              run: bun install

            - name: Build library - utils
              run: |
                  cd ./utils
                  bun run build

            - name: Build library - timer
              run: |
                  cd ./timer
                  bun run build

            - name: Generate prisma
              run: |
                  cd ./panel
                  bun run generate-prisma

            - name: Lint
              run: |
                  bun run lint

    # Tests
    tests:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v1
            - uses: actions/cache@v3
              with:
                  path: |
                      ~./npm
                      **/node_modules
                  key: ${{ runner.os }}-lint-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-lint-${{ hashFiles('**/bun.lockb') }}-

            - name: Install dependencies
              run: bun install

            - name: Build library - utils
              run: |
                  cd ./utils
                  bun run build

            - name: Run tests
              run: |
                  cd ./panel
                  bun run test
