# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Staging.BuildDeploy

on:
    push:
        branches:
            - main
    # workflow_dispatch:

# on: workflow_dispatch

jobs:
    build_shared:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.x"

            - name: npm install, build, and test
              run: |
                  cd ./shared
                  yarn install
                  yarn run build

            - uses: actions/upload-artifact@v2
              with:
                  name: shared.dist
                  path: ./shared

    build_timer:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.x"

            - name: npm install, build, and test
              run: |
                  cd ./timer
                  yarn install
                  yarn run build

            - uses: actions/upload-artifact@v2
              with:
                  name: timer.dist
                  path: ./timer

    build_panel:
        needs: [build_timer, build_shared]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.x"

            - uses: actions/download-artifact@v2
              with:
                  name: timer.dist
                  path: ./timer

            - uses: actions/download-artifact@v2
              with:
                  name: shared.dist
                  path: ./shared

            - name: npm install, build, and test
              run: |
                  cd ./panel
                  yarn install
                  yarn build
                  mv .next dist/.next
                  mv public dist/public

            - uses: actions/upload-artifact@v2
              with:
                  name: panel.dist
                  path: |
                      ./panel/dist
                      ./panel/.next
                      ./panel/public

    build_mobile:
        needs: [build_timer, build_shared]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.x"

            - uses: actions/download-artifact@v2
              with:
                  name: shared.dist
                  path: ./shared

            - uses: actions/download-artifact@v2
              with:
                  name: timer.dist
                  path: ./timer

            - name: npm install, build, and test
              run: |
                  cd ./mobile
                  yarn install
                  yarn run build

            - uses: actions/upload-artifact@v2
              with:
                  name: mobile.dist
                  path: ./mobile/build

    build_server:
        needs: [build_timer, build_panel, build_mobile, build_shared]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/download-artifact@v2
              with:
                  name: timer.dist
                  path: ./timer

            - uses: actions/download-artifact@v2
              with:
                  name: panel.dist
                  path: ./panel

            - uses: actions/download-artifact@v2
              with:
                  name: shared.dist
                  path: ./shared

            - uses: actions/download-artifact@v2
              with:
                  name: mobile.dist
                  path: ./mobile/build

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.x"

            - name: npm install, build, and test
              run: |
                  cd ./server
                  yarn install
                  yarn run build

            - uses: montudor/action-zip@v1
              with:
                  args: zip -qq -r set-hub-package.zip panel shared timer server node_modules

            - run: |
                  mkdir package
                  mv set-hub-package.zip package/set-hub-package.zip

            - name: upload artifact to staging
              uses: easingthemes/ssh-deploy@main
              env:
                  SSH_PRIVATE_KEY: ${{ secrets.OVH_SSH_PRIVATE_KEY }}
                  ARGS: "-rltgoDzvO"
                  SOURCE: "package/"
                  REMOTE_HOST: ${{ secrets.OVH_REMOTE_HOST }}
                  REMOTE_USER: ${{ secrets.OVH_REMOTE_USER }}
                  # TARGET: ${{ secrets.REMOTE_TARGET }}

            # - name: upload artifact to staging
            #   uses: SamKirkland/FTP-Deploy-Action@4.0.0
            #   with:
            #       server: ${{ secrets.ftp_server }}
            #       username: ${{ secrets.ftp_username }}
            #       password: ${{ secrets.ftp_password }}
            #       local-dir: ./package/
            #       server-dir: domains/artifacts/

    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: build_server
    #     # environment:
    #     #     name: "production"
    #     # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    #     steps:
    #         - name: publish
    #           uses: garygrossgarten/github-action-ssh@release
    #           with:
    #               host: ${{ secrets.ssh_host }}
    #               username: ${{ secrets.ssh_username }}
    #               password: ${{ secrets.ssh_password }}
    #               tryKeyboard: true
    #               command: |
    #                   cd domains/set-hub.pyszstudio.pl/
    #                   rm -rf node_modules
    #                   rm -rf public_nodejs
    #                   unzip -q ../artifacts/set-hub-package.zip
    #                   mv server public_nodejs
    #                   devil www restart set-hub.pyszstudio.pl
