name: Build.Deploy

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Set up Node.js version
              uses: actions/setup-node@v3
              with:
                  node-version: "16"

            - name: Install dependencies
              run: yarn install

            - name: Build utils
              run: |
                  cd ./utils
                  yarn build

            - name: Build timer
              run: |
                  cd ./timer
                  yarn build

            - name: Generate prisma
              run: |
                  cd ./panel
                  yarn generate-prisma

            - name: Build panel
              run: |
                  cd ./panel
                  yarn build

            - name: Bundle ZIP package
              uses: montudor/action-zip@v1
              with:
                  args: zip -qq --symlinks -r set-hub-package.zip package.json .yarn yarn.lock .yarnrc.yml panel utils timer node_modules

            - run: |
                  mkdir package
                  mv set-hub-package.zip package/set-hub-package.zip

            - name: Upload artifact
              uses: appleboy/scp-action@master
              with:
                  SOURCE: "package/"
                  HOST: ${{ secrets.OVH_REMOTE_HOST }}
                  USERNAME: ${{ secrets.OVH_REMOTE_USER }}
                  PASSWORD: ${{ secrets.OVH_REMOTE_USER_PASSWORD }}
                  TARGET: ${{ secrets.OVH_REMOTE_TARGET }}

    publish:
        needs: [build]
        runs-on: ubuntu-latest

        steps:
          - name: Publish
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.OVH_REMOTE_HOST }}
                username: ${{ secrets.OVH_REMOTE_USER }}
                password: ${{ secrets.OVH_REMOTE_USER_PASSWORD }}
                script: |
                    export NVM_DIR=~/.nvm
                    source ~/.nvm/nvm.sh
                    cd ${{ secrets.OVH_REMOTE_TARGET }}
                    mv package/set-hub-package.zip set-hub-package.zip
                    sudo cp panel/server/prisma/database.db ../../rura-databases/database-`date +"%Y%m%d%H%M"`.db
                    pm2 delete all
                    rm -rf node_modules/ package/ package.json panel/ timer/ utils/ yarn.lock .yarnrc.yml
                    unzip -q set-hub-package.zip
                    rm set-hub-package.zip
                    cp ../app.rura.cc.env panel/.env
                    yarn install
                    cd panel
                    npx prisma generate
                    npx prisma migrate deploy
                    cp `ls -dtr1 ../../rura-databases/* | tail -1` "server/prisma/database.db"
                    chmod -R 777 server/prisma
                    pm2 start npm --name "app.rura.cc" -- start