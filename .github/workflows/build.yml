name: Prod.Build-Deploy

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Set up Node.js version
              uses: actions/setup-node@v3
              with:
                  node-version: "16"
                  cache: 'yarn'

            - uses: actions/cache@v3
              with:
                  path: |
                      ~./npm
                      ${{ github.workspace }}/panel/.next/cache
                      **/node_modules
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build utils
              run: |
                  cd ./utils
                  yarn build

            - name: Build timer
              run: |
                  cd ./timer
                  yarn build

            - name: Generate prisma
              run: |
                  cd ./panel
                  yarn generate-prisma

            - name: Build panel
              run: |
                  cd ./panel
                  yarn build

            - name: Bundle ZIP package
              uses: montudor/action-zip@v1
              with:
                  args: zip -qq --symlinks -r set-hub-package.zip package.json .yarn yarn.lock .yarnrc.yml panel utils timer node_modules

            - run: |
                  mkdir package
                  mv set-hub-package.zip package/set-hub-package.zip

            - name: Upload artifact
              uses: appleboy/scp-action@master
              with:
                  SOURCE: "package/"
                  HOST: ${{ secrets.OVH_REMOTE_HOST }}
                  USERNAME: ${{ secrets.OVH_REMOTE_USER }}
                  PASSWORD: ${{ secrets.OVH_REMOTE_USER_PASSWORD }}
                  TARGET: ${{ secrets.OVH_REMOTE_TARGET }}